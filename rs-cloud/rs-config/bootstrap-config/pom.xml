<?xml version="1.0" encoding="UTF-8"?>
<!-- LICENSE_PLACEHOLDER -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.cnes.regards.cloud</groupId>
	<artifactId>bootstrap-config</artifactId>
	<description>REGARDS Cloud - Configuration server</description>
	<packaging>jar</packaging>

	<parent>
		<groupId>fr.cnes.regards</groupId>
		<artifactId>regards-boot-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath></relativePath>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.language>java</sonar.language>
		<sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
		<fr.cnes.regards.docker.image.name>rs-config</fr.cnes.regards.docker.image.name>
	</properties>

	<dependencies>
		<!-- Config Server -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Tests -->
		<dependency>
			<groupId>fr.cnes.regards.framework.test</groupId>
			<artifactId>regards-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Default properties -->
				<filter.name>development</filter.name>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<filters>
					<filter>src/main/filters/${filter.name}.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<properties> 
				<!-- Default properties -->
				<filter.name>docker</filter.name>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<filters>
					<filter>src/main/filters/${filter.name}.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>delivery</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<filters>
					<filter>src/main/filters/delivery.properties</filter>
				</filters>
			</build>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<forceTags>true</forceTags>
					<imageName>${docker.registry.host}/${fr.cnes.regards.docker.image.name}</imageName>
					<baseImage>${docker.registry.host}/rs-alpine-oraclejdk8</baseImage>
					<entryPoint>["/bin/bash", "-c", "chmod +x prestart.sh &amp;&amp; /prestart.sh &amp;&amp; java -Xmx128m -Djava.security.egd=file:/dev/./urandom -jar /${project.build.finalName}.${project.packaging}"]</entryPoint>
					<!-- We rewrite the entrypoint because rs-admin doesn't have to wait to itself -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.${project.packaging}</include>
						</resource>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.basedir}/src/main/docker</directory>
							<include>prestart.sh</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

