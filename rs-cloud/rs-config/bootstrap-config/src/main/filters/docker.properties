regards.config.cloud.config.address=0.0.0.0
regards.config.cloud.config.port=9031
regards.config.cloud.config.searchLocations=classpath:/regards

regards.config.cloud.registry.host=${regards.registry.host}
regards.config.cloud.registry.port=9032

regards.config.spring.rabbitmq.host=rs_rabbitmq
regards.config.spring.rabbitmq.port=5672
regards.config.spring.rabbitmq.username=guest
regards.config.spring.rabbitmq.password=guest
regards.config.regards.amqp.management.host=rs_rabbitmq
regards.config.regards.amqp.management.port=15672

regards.config.admin.regards.accounts.root.user.login=regards-admin@c-s.fr
regards.config.admin.regards.accounts.root.user.password=root_admin

regards.config.regards.postgres.host=rs_postgres
regards.config.regards.postgres.port=5432
regards.config.regards.postgres.username=azertyuiop123456789
regards.config.regards.postgres.password=azertyuiop123456789

# Proxy
regards.config.http.proxy.host=proxy2.si.c-s.fr
regards.config.http.proxy.port=3128

# Public gateway domain
regards.config.first.project.public.access=https://127.0.0.1/project1

# Elasticsearch
regards.config.elasticsearch.address=
regards.config.elasticsearch.host=rs_elasticsearch
regards.config.elasticsearch.cluster.name=regards
regards.config.elasticsearch.http.port=9200

regards.config.dam.regards.ingester.rate.ms=60000

# Jobs pool size
regards.config.order.regards.jobs.pool.size=2
regards.config.storage.regards.jobs.pool.size=2
regards.config.dataprovider.regards.jobs.pool.size=2
regards.config.ingest.regards.jobs.pool.size=2

# Jobs completion update period
regards.config.order.regards.jobs.completion.update.rate.ms=2500
regards.config.storage.regards.jobs.completion.update.rate.ms=1000
regards.config.dataprovider.regards.jobs.completion.update.rate.ms=10000
regards.config.ingest.regards.jobs.completion.update.rate.ms=2500

# Jobs retention values
regards.config.order.regards.jobs.succeeded.retention.days=1
regards.config.order.regards.jobs.failed.retention.days=30
regards.config.storage.regards.jobs.succeeded.retention.days=1
regards.config.storage.regards.jobs.failed.retention.days=30
regards.config.dataprovider.regards.jobs.succeeded.retention.days=1
regards.config.dataprovider.regards.jobs.failed.retention.days=30
regards.config.ingest.regards.jobs.succeeded.retention.days=1
regards.config.ingest.regards.jobs.failed.retention.days=30

regards.config.cors.requests.authorized.clients.addresses=

regards.config.gateway.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.gateway.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.gateway.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.admin.regards.jpa.instance.datasource.url=${regards.db.host}:${regards.db.port}/rs_admin_instance
regards.config.admin.regards.jpa.instance.datasource.user.name=${regards.db.username}
regards.config.admin.regards.jpa.instance.datasource.password=${regards.db.password}
regards.config.admin.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.admin.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.admin.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.dam.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.dam.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.dam.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.order.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.order.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.order.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.access.instance.regards.jpa.instance.datasource.url=${regards.db.host}:${regards.db.port}/rs_access_instance
regards.config.access.instance.regards.jpa.instance.datasource.user.name=${regards.db.username}
regards.config.access.instance.regards.jpa.instance.datasource.password=${regards.db.password}
regards.config.access.project.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.access.project.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.access.project.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.catalog.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.catalog.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.catalog.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.storage.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.storage.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.storage.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.ingest.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.ingest.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.ingest.regards.jpa.multitenant.tenants.password.1=${regards.db.password}
regards.config.dataprovider.regards.jpa.multitenant.tenants.url.1=${regards.db.host}:${regards.db.port}/rs_tenant0
regards.config.dataprovider.regards.jpa.multitenant.tenants.user.name.1=${regards.db.username}
regards.config.dataprovider.regards.jpa.multitenant.tenants.password.1=${regards.db.password}

# Passwords configuration
regards.config.admin.accounts.password.regex=[a-z0-9]*
regards.config.admin.accounts.password.rules=Password should contain letters or numbers
# Duration of password validity (days)
regards.config.admin.accounts.password.validity.duration=350
regards.config.admin.accounts.failed.authentication.max=5

# Accounts configuration
# Duration of account validity (days)
regards.accounts.validity.duration=30

# First project to add
regards.config.first.project=project1

# When true, automatically set a microservice in maintenance when an exception is not catched
regards.config.regards.maintenance=false

# Email (MailProperties)
spring.mail.host=rs_maildev
spring.mail.port=25
spring.mail.username=
spring.mail.password=

# rs-dam local storage
regards.config.dam.regards.local_storage.path=/tmp/rs-dam-ls

# rs-storage local cache
regards.config.storage.cache.directory=/tmp/rs-storage-cache

# rs-order
regards.config.order.regards.order.files.bucket.size.Mb=100
regards.config.order.regards.order.validation.period.days=3
regards.config.order.regards.order.days.before.considering.order.as.aside=7
regards.config.order.regards.order.secret=Metallica sinon tu vas prendre froid
regards.config.order.regards.order.files.displayable.maximum=5000
regards.config.order.regards.order.max.storage.files.jobs.per.user=2
regards.config.order.regards.order.periodic.files.availability.check.cron=0 0 7 * * MON-FRI


# Workspace
regards.config.workspace.directory=/tmp/workspace

# rs-dataprovider
regards.acquisition.process.new.sip.ingest.delay=5000
regards.acquisition.process.run.chains.delay=120000

# rs-ingest
regards.config.ingest.aips.bulk.request.limit=100


management.security.enabled=false

# Encryption
regards.config.cipher.key.location=/key
regards.config.cipher.iv=1234567812345678