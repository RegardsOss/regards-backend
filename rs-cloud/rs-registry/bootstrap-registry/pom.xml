<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2017-2018 CNES - CENTRE NATIONAL d'ETUDES SPATIALES
 
 This file is part of REGARDS.
 
 REGARDS is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 REGARDS is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with REGARDS. If not, see <http://www.gnu.org/licenses/>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.cnes.regards.cloud</groupId>
    <artifactId>bootstrap-registry</artifactId>
    <description>REGARDS Cloud - Registry</description>

    <parent>
        <groupId>fr.cnes.regards</groupId>
        <artifactId>regards-boot-parent</artifactId>
        <version>0.4.1</version>
        <relativePath></relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <sonar.language>java</sonar.language>
        <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
        <fr.cnes.regards.docker.image.name>rs-registry</fr.cnes.regards.docker.image.name>
        <docker.entryPoint>["./wait-for-it.sh", "rs-config:9031", "-t", "0", "--", "java","-Xmx128m","-Djava.security.egd=file:/dev/./urandom","-agentlib:jdwp=transport=dt_socket,address=10500,server=y,suspend=n","-jar","/${project.build.finalName}.${project.packaging}"]</docker.entryPoint>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
        <dependency>
            <groupId>fr.cnes.regards.framework</groupId>
            <artifactId>microservice-logger</artifactId>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>fr.cnes.regards.framework.test</groupId>
            <artifactId>regards-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Default properties -->
                <filter.name>development</filter.name>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <filters>
                    <filter>src/main/filters/${filter.name}.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <properties>
                <!-- Default properties -->
                <filter.name>docker</filter.name>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <filters>
                    <filter>src/main/filters/${filter.name}.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>delivery</id>
        </profile>
    </profiles>
</project>
