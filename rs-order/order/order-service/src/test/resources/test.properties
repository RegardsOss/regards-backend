spring.application.name=rs-order

jwt.secret=123456789

regards.tenant=ORDER
regards.tenants=ORDER

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

regards.jpa.multitenant.embedded=false
regards.jpa.multitenant.dialect=org.hibernate.dialect.PostgreSQLDialect
regards.jpa.multitenant.tenants[0].tenant=ORDER
regards.jpa.multitenant.tenants[0].url=jdbc:postgresql://172.26.47.52:5432/rs_testdb_${user.name}
regards.jpa.multitenant.tenants[0].userName=azertyuiop123456789
regards.jpa.multitenant.tenants[0].password=azertyuiop123456789
regards.jpa.multitenant.tenants[0].driverClassName=org.postgresql.Driver


regards.amqp.enabled=true
# RabbitMQ server adresses - the amqp starter can only handle one address
spring.rabbitmq.addresses=@regards.IT.rabbitmq.host@:@regards.IT.rabbitmq.port@
# Property indicating the username used to connect and manage the broker, for the
# amqp starter, this user must have permissions to add virtual hosts and permissions
spring.rabbitmq.username=guest
# password of the user
spring.rabbitmq.password=guest

# Microservice type identifier (used to restrict event cast)
regards.amqp.microservice.type-identifier=rs-test-order
# Microservice instance identifier (used for event broadcasting).
# Must be unique by microservice type to ensure all instances will receive an event
regards.amqp.microservice.instance-identifier=rs-test-order-for-broadcast

# Virtual host management address
regards.amqp.management.host=@regards.IT.rabbitmq.management.host@
regards.amqp.management.port=@regards.IT.rabbitmq.management.port@


regards.order.files.bucket.size.Mb=1

regards.order.max.storage.files.jobs.per.user=2
regards.order.validation.period.days=1