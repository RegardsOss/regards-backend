<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2017-2020 CNES - CENTRE NATIONAL d'ETUDES SPATIALES
 
 This file is part of REGARDS.
 
 REGARDS is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 REGARDS is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with REGARDS. If not, see <http://www.gnu.org/licenses/>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>fr.cnes.regards</groupId>
	<artifactId>regards-parent</artifactId>
	<version>1.3.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<description>Aggregates business modules, regards-boot-parent-project and regards-frontend-project</description>
    <url>https://github.com/RegardsOss/RegardsOss.github.io</url>
	<inceptionYear>2016</inceptionYear>
	<licenses>
		<license>
			<name>GNU General Public License (GNU GPL)</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>CNES</name>
		<url>https://cnes.fr/fr</url>
	</organization>
	<developers>
		<developer>
			<name>REGARDS Team</name>
			<organization>CS Syst√®mes d'Information</organization>
			<organizationUrl>http://www.c-s.fr</organizationUrl>
		</developer>
	</developers>

	<properties>
		<!-- Default compilation parameters -->
		<!-- Skip executing tests -->
		<skipTests>false</skipTests>
		<!-- Generics -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<resource.delimiter>@</resource.delimiter> <!-- delimiter that doesn't clash with Spring ${} placeholders -->
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<docker.registry.host>172.26.46.158</docker.registry.host>
		<docker.registry.baseImage>regards-java-alpine</docker.registry.baseImage>
        <sonar.language>java</sonar.language>
        <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
        <jacoco.outputDir>${project.basedir}/target/coverage-reports</jacoco.outputDir>
        <!-- Jacoco output file for UTs -->
        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located for UT -->
        <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
        <!-- Jacoco output file for ITs -->
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <!-- Tells Sonar where the Jacoco coverage result file is located for IT -->
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
        <spring.hibernate.version>5.3.12.Final</spring.hibernate.version>
		<spring.version>5.1.4.RELEASE</spring.version>
        <regards.bom.version>1.1.2-SNAPSHOT</regards.bom.version>
	<org.mapstruct.version>1.3.0.Final</org.mapstruct.version>
	<!-- Test properties -->
	<regards.maven.test.env>-Duser.timezone=GMT0</regards.maven.test.env>
    </properties>

    <dependencies>
        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fr.cnes.regards</groupId>
                <artifactId>regards-dependencies</artifactId>
                <version>${regards.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


        <distributionManagement>
                <snapshotRepository>
                        <uniqueVersion>true</uniqueVersion>
                        <id>maven-snapshot-regards</id>
                        <name>Nexus Maven Repository for regards artifacts</name>
                        <url>https://172.26.46.158:8443/repository/maven-snapshot-regards/</url>
                </snapshotRepository>
                <repository>
                        <uniqueVersion>true</uniqueVersion>
                        <id>nexus-maven-regards</id>
                        <name>Nexus Maven Repository for regards artifacts</name>
                        <url>https://172.26.46.158:8443/repository/nexus-maven-regards/</url>
                </repository>
	</distributionManagement>

    <profiles>
        <profile>
            <id>LT</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <testResources>
                    <testResource>
                        <directory>${basedir}/src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <filters>
                    <filter>${env.REGARDS_HOME}/rs-bom/regards-parent/LT.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>CI</id>
            <build>
                <directory>${basedir}/${cmdLineTarget}</directory>
                <testResources>
                    <testResource>
                        <directory>${basedir}/src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <filters>
                    <filter>${env.MAVEN_HOME}/conf/CI.properties</filter>
                </filters>
            </build>
        </profile>
		<profile>
			<!-- profile to desactivate resource filtering -->
			<id>install</id>
		</profile>
    </profiles>

    <build>
        <!-- Turn on filtering by default for application properties -->
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application*.yml</include>
                    <include>**/application*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.yml</exclude>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- docker image generator -->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.4.11</version>
                    <configuration>
                        <skipDockerBuild>true</skipDockerBuild>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>1.4.0</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
				<!-- Plugin used to check versions -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<!-- Apply more sensible defaults for user projects -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<delimiters>
							<delimiter>${resource.delimiter}</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- Support spring boot plugin -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>1.4.0.RELEASE</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
						<layout>ZIP</layout>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<skipTests>${skipTests}</skipTests>
						<!-- Sets the VM argument line used when integration tests are run. -->
						<argLine>${jacoco.agent.it.arg}</argLine>
						<properties>
							<property>
								<name>listener</name>
								<value>fr.cnes.regards.framework.test.report.RequirementMatrixReportListener</value>
							</property>
						</properties>
						<!-- Let's put failsafe reports with surefire to have access to tests 
							failures/success reports in sonar -->
						<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<!-- Sets the VM argument line used when integration tests are run. -->
								<argLine>${jacoco.agent.it.arg}</argLine>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.7.201606060606</version>
					<executions>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which 
							is passed as VM argument when Maven the Surefire plugin is executed. -->
						<execution>
							<id>pre-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${sonar.jacoco.reportPath}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo 
									runtime agent. -->
								<propertyName>jacoco.agent.ut.arg</propertyName>
								<append>true</append>
							</configuration>
						</execution>
						<!-- Prepares the property pointing to the JaCoCo runtime agent which 
							is passed as VM argument when Maven the Failsafe plugin is executed. -->
						<execution>
							<id>pre-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${sonar.jacoco.itReportPath}</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo 
									runtime agent. -->
								<propertyName>jacoco.agent.it.arg</propertyName>
								<append>true</append>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<skipTests>${skipTests}</skipTests>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${jacoco.agent.ut.arg} ${regards.maven.test.env}</argLine>
						<properties>
							<property>
								<name>listener</name>
								<value>fr.cnes.regards.framework.test.report.RequirementMatrixReportListener</value>
							</property>
						</properties>
						<includes>
							<include>**/*Tests.java</include>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/Abstract*.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>fr.cnes.regards.microservices</groupId>
					<artifactId>report-maven-plugin</artifactId>
					<version>${project.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>3.5</version>
					<executions>
						<execution>
							<id>default-descriptor</id>
							<phase>process-classes</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
                        		<groupId>org.mapstruct</groupId>
                        		<artifactId>mapstruct-processor</artifactId>
                        		<version>${org.mapstruct.version}</version>
                    		</path>
                    		<!-- other annotation processors -->
						</annotationProcessorPaths>
					</configuration>
				</plugin>       
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.1.1</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<shadedArtifactAttached>true</shadedArtifactAttached>
								<shadedClassifierName>shaded</shadedClassifierName>
								<minimizeJar>true</minimizeJar>
								<transformers>
									<transformer
											implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
										<resources>
											<resource>.SF</resource>
											<resource>.DSA</resource>
											<resource>.RSA</resource>
										</resources>
									</transformer>
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin> 
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>1.5.3</version>
					<executions>
						<execution>
							<id>generate-docs</id>
							<!-- <phase>prepare-package</phase> Snippets not available before IT for now --> 
							<phase>post-integration-test</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
							<configuration>
								<backend>html</backend>
								<doctype>book</doctype>
								<sourceHighlighter>highlight.js</sourceHighlighter>
								<attributes>
									<icons>font</icons>
									<sectnums>true</sectnums>
									<sectlinks>true</sectlinks>
									<toc>left</toc>
									<toclevels>4</toclevels>
								</attributes>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency> 
							<groupId>org.springframework.restdocs</groupId>
							<artifactId>spring-restdocs-asciidoctor</artifactId>
							<version>1.2.4.RELEASE</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin> 
                	<groupId>org.hibernate.orm.tooling</groupId> 
                	<artifactId>hibernate-enhance-maven-plugin</artifactId> 
                	<version>${spring.hibernate.version}</version> 
                	<executions> 
                    	<execution> 
                        	<configuration> 
                            	<failOnError>true</failOnError> 
                            	<enableLazyInitialization>true</enableLazyInitialization> 
                        	</configuration> 
                        	<goals> 
                            	<goal>enhance</goal> 
                        	</goals> 
                    	</execution> 
                	</executions> 
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
