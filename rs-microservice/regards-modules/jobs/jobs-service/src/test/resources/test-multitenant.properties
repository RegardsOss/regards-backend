spring.application.name=regards

jwt.secret=123456789

regards.tenant=JOBS1
regards.tenants=JOBS1, JOBS2

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

regards.jpa.multitenant.migrationTool=HBM2DDL
regards.jpa.multitenant.embedded=true
regards.jpa.multitenant.embeddedPath=target
regards.jpa.multitenant.tenants[0].tenant=JOBS1
regards.jpa.multitenant.tenants[1].tenant=JOBS2


regards.amqp.enabled=true
# RabbitMQ server adresses - the amqp starter can only handle one address
spring.rabbitmq.addresses=@regards.IT.rabbitmq.host@:@regards.IT.rabbitmq.port@
# Property indicating the username used to connect and manage the broker, for the
# amqp starter, this user must have permissions to add virtual hosts and permissions
spring.rabbitmq.username=guest
# password of the user
spring.rabbitmq.password=guest

# Microservice type identifier (used to restrict event cast)
regards.amqp.microservice.type-identifier=rs-test-jobs-multitenant
# Microservice instance identifier (used for event broadcasting).
# Must be unique by microservice type to ensure all instances will receive an event
regards.amqp.microservice.instance-identifier=rs-test-jobs-multitenant-for-broadcast

# Virtual host management address
regards.amqp.management.host=@regards.IT.rabbitmq.management.host@
regards.amqp.management.port=@regards.IT.rabbitmq.management.port@

# A pool of 3 is sufficient for tests
regards.jobs.pool.size=3

# workspace properties
regards.workspace=target/workspace