create table t_aip (id int8 not null, categories jsonb not null, creation_date timestamp not null, ip_type varchar(20) not null, last_update timestamp not null, provider_id varchar(100) not null, session_name varchar(128) not null, session_owner varchar(128) not null, tags jsonb, version int4, rawaip jsonb not null, aip_id varchar(128), checksum varchar(128), state varchar(255), storages jsonb not null, manifest_locations jsonb not null, sip_id int8, primary key (id));
create table t_ingest_processing_chain (id int8 not null, description varchar(128), name varchar(50) not null, generation_conf_id int8 not null, postprocessing_conf_id int8, preprocessing_conf_id int8, tag_conf_id int8, validation_conf_id int8 not null, primary key (id));
create table t_request (dtype varchar(32) not null, id int8 not null, creation_date timestamp not null, errors jsonb, provider_id varchar(128), remote_step_deadline timestamp, remote_step_group_ids jsonb, session_name varchar(128), session_owner varchar(128), state varchar(50), payload jsonb, job_info_id uuid, aip_id int8, update_task_id int8, primary key (id));
create table t_sip (id int8 not null, categories jsonb not null, creation_date timestamp not null, ip_type varchar(20) not null, last_update timestamp not null, provider_id varchar(100) not null, session_name varchar(128) not null, session_owner varchar(128) not null, tags jsonb, version int4, checksum varchar(128), rawsip jsonb, sipId varchar(128), state varchar(255), primary key (id));
create table t_update_task (dtype varchar(32) not null, id int8 not null, state varchar(255), type varchar(255), payload jsonb, primary key (id));
create table ta_ingest_request_aip (ingest_request_id int8 not null, aip_id int8 not null);
create index idx_aip_id on t_aip (id, aip_id, sip_id);
create index idx_search_aip on t_aip (session_owner, session_name, state, last_update);
create index idx_aip_provider_id on t_aip (provider_id);
create index idx_aip_storage on t_aip (storages);
create index idx_aip_tags on t_aip (tags);
create index idx_aip_categories on t_aip (categories);
create index idx_aip_sip_id on t_aip (sip_id);
create index idx_aip_state on t_aip (state);
create index idx_ta_ingest_request_aip_ingest_request_id ON ta_ingest_request_aip USING btree (ingest_request_id);
alter table t_ingest_processing_chain drop constraint if exists uk_ingest_chain_name;
alter table t_ingest_processing_chain add constraint uk_ingest_chain_name unique (name);
create index idx_request_search on t_request (session_owner, session_name, provider_id);
create index idx_request_aip_id on t_request (aip_id);
create index idx_request_remote_step_group_ids on t_request (remote_step_group_ids);
create index idx_sip_id on t_sip (provider_id, sipId, checksum);
create index idx_sip_state on t_sip (state);
create index idx_sip_providerId on t_sip (provider_id);
create index idx_sip_creation_date on t_sip (creation_date);
create index idx_sip_version on t_sip (version);
create index idx_sip_session_owner on t_sip (session_owner);
create index idx_sip_session on t_sip (session_name);
alter table t_sip drop constraint if exists uk_sip_sipId;
alter table t_sip add constraint uk_sip_sipId unique (sipId);
alter table t_sip drop constraint if exists uk_sip_checksum;
alter table t_sip add constraint uk_sip_checksum unique (checksum);
alter table ta_ingest_request_aip drop constraint if exists uk_ingest_request_aip_aip_id;
alter table ta_ingest_request_aip add constraint uk_ingest_request_aip_aip_id unique (aip_id);
create sequence seq_aip start 1 increment 50;
create sequence seq_aip_update_task start 1 increment 50;
create sequence seq_ingest_chain start 1 increment 50;
create sequence seq_request start 1 increment 50;
create sequence seq_sip start 1 increment 50;
alter table t_aip add constraint fk_sip foreign key (sip_id) references t_sip;
alter table t_ingest_processing_chain add constraint fk_generation_conf_id foreign key (generation_conf_id) references t_plugin_configuration;
alter table t_ingest_processing_chain add constraint fk_postprocessing_conf_id foreign key (postprocessing_conf_id) references t_plugin_configuration;
alter table t_ingest_processing_chain add constraint fk_preprocessing_conf_id foreign key (preprocessing_conf_id) references t_plugin_configuration;
alter table t_ingest_processing_chain add constraint fk_tag_conf_id foreign key (tag_conf_id) references t_plugin_configuration;
alter table t_ingest_processing_chain add constraint fk_validation_conf_id foreign key (validation_conf_id) references t_plugin_configuration;
alter table t_request add constraint fk_req_job_info_id foreign key (job_info_id) references t_job_info;
alter table t_request add constraint fk_update_request_aip foreign key (aip_id) references t_aip;
alter table t_request add constraint fk_update_request_update_task_id foreign key (update_task_id) references t_update_task on delete cascade;
alter table ta_ingest_request_aip add constraint fk_ingest_request_aip_aip_id foreign key (aip_id) references t_aip;
alter table ta_ingest_request_aip add constraint fk_ingest_request_aip_request_id foreign key (ingest_request_id) references t_request;
